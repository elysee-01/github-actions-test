name: GitHub Actions Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        if [ -f test.py ]; then pytest test.py; fi
    - name: Reformat Code
      run: black .
    - name: Run Coverage
      run: |
        if [ -f test.py ]; then coverage run -m pytest test.py; fi
    - name: coverage.py badge
      # You may pin to the exact commit or the version.
      # uses: tj-actions/coverage-badge-py@786077b81572723a796adaf34015dfaeea425c3b
      uses: tj-actions/coverage-badge-py@v1.6
      with:
        # Output path to write the badge.
        output: coverage.svg
        # Overwrite existing.
        overwrite: true

    - name: Push changes
      uses: actions-go/push@v1
      with:
        # Override the existing remote branch if it already exist
        # force: # optional
        # The email that will appear in commits when changes needs to be committed
        author-email: elyseekevin49@gmail.com
        author-name: ELYSEE-01
        create-commit: true
        commit-message: "Commit change"
        # The name of the local reference to push.
        # ref: # optional, default is ${{ github.ref }}
        # The name of the remote on which to push the changes. Defaults to the tracked remote
        # remote: # optional, default is origin
        # The name of the remote reference to pushto. Defaults to the tracked remote branch.
        #remote-ref: # optional, default is ${{ github.ref }}
        # Fail the action in case there is nothing to do.
        # fail-if-empty: # optional
        # Auth token used to fetch the repository. The token is stored in the local git config, which enables your scripts to run authenticated git commands. The post-job step removes the token from the git config. [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)

        # token: # optional, default is ${{ github.token }}
