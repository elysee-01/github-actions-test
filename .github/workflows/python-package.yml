name: GitHub Actions Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        architecture: [x64]
        python-version: ["3.10"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Test with pytest
      run: |
        if [ -f test.py ]; then pytest test.py; fi

    - name: Reformat Code
      run: black .

    - name: Push changes
      uses: actions-go/push@v1
      with:
        author-email: elyseekevin49@gmail.com
        author-name: ELYSEE-01
        create-commit: true
        commit-message: "Commit changes from the auto-formatting action"

    #- name: Run Coverage
    #  run: |
    #    if [ -f test.py ]; then coverage run -m pytest test.py; fi

      # GITHUB_TOKEN COVERALLS_REPO_TOKEN ${{ github.token }} ${{ secrets.GITHUB_TOKEN }} ${{ secret.GITHUB_TOKEN }}
    - name: Coveralls GitHub Action
      uses: coverallsapp/github-action@1.1.3
      with:
        github-token: ${{ github.token }}
        # Job flag name, e.g. "Unit", "Functional", or "Integration". Will be shown in the Coveralls UI.
        flag-name: run-${{ matrix.test_number }}
        # Set to true if you are running parallel jobs, then use "parallel_finished: true" for the last action.
        parallel: true
        # Set to true for the last action when using "parallel: true".
        parallel-finished: true
        git-branch: main
